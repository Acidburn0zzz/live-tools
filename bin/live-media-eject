#!/bin/sh

## live-tools(7) - System Support Scripts
## Copyright (C) 2006-2013 Daniel Baumann <mail@daniel-baumann.ch>
##
## This program comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
## This is free software, and you are welcome to redistribute it
## under certain conditions; see COPYING for details.


set -e

# Exit if system is not a live system
if ! grep -qs "boot=live" /proc/cmdline || \
# Exit if system is netboot
   grep -qs "netboot" /proc/cmdline || \
   grep -qs "root=/dev/nfs" /proc/cmdline || \
   grep -qs "root=/dev/cifs" /proc/cmdline || \
# Exit if system is toram
   grep -qs "toram" /proc/cmdline || \
# Exit if user disabled medium eject
   grep -qs "cdrom-detect/eject=false" /proc/cmdline || \
   grep -qs "noeject" /proc/cmdline || \
   grep -qs "find_iso" /proc/cmdline
then
	exit 0
fi

# Reading configuration files from filesystem and live-media
for _FILE in /etc/live/tools.conf /etc/live/tools/* \
	     /lib/live/mount/medium/live/tools.conf /lib/live/mount/medium/live/tools/*
do
	if [ -e "${_FILE}" ]
	then
		. "${_FILE}"
	fi
done

# Setting defaults
LIVE_MEDIA_EJECT_VERBOSE="${LIVE_MEDIA_EJECT_VERBOSE:-true}"

# Get root device node
while read _DEVICE _MOUNT _REST
do
	case "${_MOUNT}" in
		/lib/live/mount/medium)
			LIVE_MEDIUM_NODE="$(echo ${_DEVICE} | sed -e 's|/dev/||' -e 's|[0-9].*$||')"
			break
			;;
	esac
done < /proc/mounts

# Get root device type
case "${LIVE_MEDIUM_NODE}" in
	sd*)
		if readlink "/sys/block/${LIVE_MEDIUM_NODE}" | grep -q usb
		then
			LIVE_MEDIUM_TYPE="usb"
		fi
		;;
esac

LIVE_MEDIUM_TYPE="${LIVE_MEDIUM_TYPE:-disc}"

# Eject live medium
case "${LIVE_MEDIUM_TYPE}" in
	usb)
		_EJECT="Please remove the USB flash drive"
		;;

	disc)
		_EJECT="Please remove the disc, close the tray (if any)"
		;;
esac

case "${LIVE_MEDIUM_TYPE}" in
	usb)
		# do not eject usb devices
		# they need coldreboot to recover
		;;

	*)
		if [ -x /usr/bin/eject ]
		then
			eject -p -m /lib/live/mount/medium >/dev/null 2>&1
		fi

		case "${LIVE_MEDIA_EJECT_VERBOSE}" in
			true)
				if [ -x /bin/plymouth ] && plymouth --ping
				then
					plymouth message --text="${_EJECT} and press ENTER to continue:"
					plymouth watch-keystroke > /dev/null
				else
					stty sane < /dev/console

					printf "\n\n${_EJECT} and press ENTER to continue:" > /dev/console

					read x < /dev/console
				fi
				;;
		esac
		;;
esac
